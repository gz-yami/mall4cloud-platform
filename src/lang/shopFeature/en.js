export default {
  editMiniPage: 'Edit mini-page',
  chooseFeature: {
    choosePageTips: 'Please select a micro page',
    pageTitle: 'Page title',
    createTime: 'Creation time'
  },
  template: {
    blank: 'Blank',
    newTemplate: 'New template',
    refresh: 'Refresh',
    edit: 'Edit',
    delete: 'Delete',
    copy: 'Copy',
    copySuccess: 'Copy success',
    selectTemplate: 'Select a template'
  },
  allCanUse: {
    basicComponents: 'Basic components',
    config: 'Configuration',
    titleText: 'Title',
    notice: 'Notice',
    goodsList: 'Product list',
    imgAd: 'Image ads',
    navigationBar: 'Navigation bar',
    activities: 'Activities',
    productMarketing: 'Product marketing',
    goodsWaterfall: 'Waterfall flow'
  },
  goods: {
    prod: 'Product',
    prodName: 'Product name',
    prodDesc: 'Product description',
    prodPrice: 'Product price',
    pleaseAddProd: 'Please add product',
    listStyle: 'List style',
    showContent: 'Show contents',
    oneLineItem1: 'One item in a line',
    oneLineItem2: 'Two items in a line',
    oneLineItem3: 'Three items in a line',
    showType: 'Show category or not',
    sortType: 'Sorting mode',
    timeType: 'Time range',
    sortStats: 'Sort ascending and descending'
  },
  header: {
    microTitle: 'Micro Title',
    pageName: 'Page name',
    pageNameCanntEmpty: 'The page name can\'t be empty',
    pageNamePlaceholder: 'Please input the page name'
  },
  headerAd: {
    pageTitle: '[Page title]',
    pageHeader: 'Page header',
    pageFooter: 'Page footer',
    microPage: 'Micro page',
    prodDetail: 'Product detail',
    showPosition: 'Show position:',
    showPages: 'Show pages:'
  },
  imageAd: {
    carouselPoster: 'Carousel Poster',
    lateralSliding: 'Lateral Sliding',
    hotArea: 'Hot Area',
    prodDetPage: 'Product details',
    actPage: 'Activity page',
    widthSuggest: 'Recommended image size is 750*300',
    imageAd: 'Image Ads',
    selModel: 'Select template',
    changeModelTips: 'Note：the hot area will be cleared when switching templates',
    isShowDots: 'Indicator：',
    dotsColor: 'Indicator color',
    reset: 'Reset',
    actDotColor: 'Activate color',
    addPic: 'Add picture',
    max10Ads: 'Tips: Add up to 10 ads',
    imgSizeTip: 'As a top carousel, it is recommended that the image size be 750*300',
    imgHeight: 'Picture height',
    picTit: 'Title',
    addHotArea: 'Add Hot Area',
    setRoute: 'Set link',
    addBgImg: 'Add background image',
    save: 'Save',
    hotAreaTit: 'Universal hot zone',
    setHotAreaRoute: 'Please set hot area link'
  },
  notice: {
    announcement: 'Carousel announcement',
    announcementTips1: 'Show the top announcement in the mall in the form of carousel',
    announcementTips2: 'Please check the effect on the client'
  },
  promotionalActivities: {
    addProd: 'Please add product',
    groupPurchase: 'Group purchase',
    spike: 'Spike',
    more: 'More ',
    promotionalActivity: 'Promotional activity',
    addActivityProds: 'Add activity products',
    addActivityProdsTip: 'Add up to 3 items',
    activityType: 'Activity type',
    promotionPrice: 'PromotionPrice',
    tipsContent: 'Invalid active goods are detected in the component. Do you want to refresh the data immediately?',
    tips: 'Tips',
    max5Prods: 'Display up to 5'
  },
  tabNav: {
    picNav: 'Picture',
    picTextNav: 'Picture & Text',
    tetxNav: 'Text',
    line4item: 'Four item a row',
    line5item: 'Five item a row',
    cart: 'Shopping Cart',
    personalCenter: 'Personal Center',
    customPath: 'Custom path',
    fullFillTips: 'Please complete the information',
    pleaseAddNav: 'Please add navigation',
    pleaseAddPic: 'Please add a picture',
    pleaseFillNavTitle: 'Please fill in the navigation title',
    pleaseChooseRouteLink: 'Please choose route link',
    pleaseFillThePath: 'Please fill the link path',
    navBar: 'Navigation bar',
    countInLine: 'Quantity per row',
    changePic: 'Change picture',
    addPic: 'Add',
    tit: 'Title',
    routeLink: 'Route link',
    choose: 'Please choose',
    addNav: 'Add navigation',
    microPage: 'Micro page',
    confirm: 'Confirm',
    cancel: 'Cancel',
    link: 'Link'
  },
  titText: {
    linkText: 'More',
    prodDet: 'Product details',
    pleaseFillTit: 'Please fill in the title',
    pleaseChoosePord: 'Please choose product',
    titText: 'Title text',
    titContent: 'Title content',
    decsContent: 'Description content',
    decsContentPlaceholder: 'Please enter the description, up to 100 words',
    showPos: 'Position',
    left: 'Left',
    center: 'Center',
    titSize: 'Title size',
    titWeight: 'Title weight',
    descWeight: 'Description weight',
    normal: 'Normal',
    bold: 'Bold',
    more: 'More',
    style: 'Style',
    textContent: 'Text content',
    pleaseFillTextContent: 'Please fill in the text'
  },
  edit: {
    save: 'Save',
    saveAndCon: 'Save and continue',
    moreOper: 'More operations',
    noneUseableCom: 'There are no components available',
    saveSuccess: 'Saved successfully',
    deleteConfirm: 'Are you sure you want to delete this component?',
    cancel: 'Cancel',
    confirm: 'Confirm',
    componentManagement: 'Component management',
    emptyTemplate: 'The page component is empty',
    removeAll: 'Remove all components',
    removeComponent: 'Remove component',
    back: 'Back',
    componentSorting: 'Component Sorting'
  },
  list: {
    newMicroPage: 'New page',
    pageName: 'Page name',
    shopHomePage: 'Homepage',
    createTime: 'Creation time',
    updateTime: 'Update time',
    oper: 'Operation',
    edit: 'Edit',
    view: 'View',
    modify: 'Modify',
    delete: 'Delete',
    setHomePage: 'Set Homepage',
    cancelHomePage: 'Cancel Homepage',
    deleteTips: 'Are you sure to detele？',
    tips: 'Tips',
    deleteSuccess: 'Delete successfully!',
    operSuccess: 'Operation successful!'
  },
  searchBar: {
    searchBar: 'Search Bar',
    search: 'Search',
    normal: 'Normal',
    topThenLock: 'Roll to the top to fix',
    square: 'Square',
    fillet: 'Fillet',
    left: 'Left',
    center: 'Center',
    showPos: 'Display location',
    textPos: 'Text location',
    boxStyle: 'Box style',
    boxHeight: 'Box height',
    bgColor: 'Background color',
    boxColor: 'Box color',
    textColor: 'Text color'
  }
}
